version: '3.8'

services:
  # Redis for Celery broker and result backend
  redis:
    image: redis:7-alpine
    container_name: signal-noise-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}

  # Main application
  app:
    build: .
    container_name: signal-noise-app
    ports:
      - "8000:8000"
    environment:
      - NEO4J_URI=${NEO4J_URI}
      - NEO4J_USER=${NEO4J_USER}
      - NEO4J_PASSWORD=${NEO4J_PASSWORD}
      - REDIS_URL=redis://:${REDIS_PASSWORD:-}@redis:6379/0
      - CLAUDE_API_KEY=${CLAUDE_API_KEY}
      - PERPLEXITY_API_KEY=${PERPLEXITY_API_KEY}
      - BRIGHTDATA_API_KEY=${BRIGHTDATA_API_KEY}
      - ENVIRONMENT=production
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Celery worker for background tasks
  worker:
    build: .
    container_name: signal-noise-worker
    command: ["celery", "-A", "backend.celery_app", "worker", "--loglevel=info", "--concurrency=2"]
    environment:
      - NEO4J_URI=${NEO4J_URI}
      - NEO4J_USER=${NEO4J_USER}
      - NEO4J_PASSWORD=${NEO4J_PASSWORD}
      - REDIS_URL=redis://:${REDIS_PASSWORD:-}@redis:6379/0
      - CLAUDE_API_KEY=${CLAUDE_API_KEY}
      - PERPLEXITY_API_KEY=${PERPLEXITY_API_KEY}
      - BRIGHTDATA_API_KEY=${BRIGHTDATA_API_KEY}
      - ENVIRONMENT=production
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped

  # Celery beat for scheduled tasks (if needed)
  beat:
    build: .
    container_name: signal-noise-beat
    command: ["celery", "-A", "backend.celery_app", "beat", "--loglevel=info"]
    environment:
      - NEO4J_URI=${NEO4J_URI}
      - NEO4J_USER=${NEO4J_USER}
      - NEO4J_PASSWORD=${NEO4J_PASSWORD}
      - REDIS_URL=redis://:${REDIS_PASSWORD:-}@redis:6379/0
      - CLAUDE_API_KEY=${CLAUDE_API_KEY}
      - PERPLEXITY_API_KEY=${PERPLEXITY_API_KEY}
      - BRIGHTDATA_API_KEY=${BRIGHTDATA_API_KEY}
      - ENVIRONMENT=production
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped

volumes:
  redis_data:
    driver: local

networks:
  default:
    name: signal-noise-network
